{"version":3,"sources":["Images sync /^/stage.*/.png$","Images/stage0.png","Images/stage1.png","Images/stage2.png","Images/stage3.png","Images/stage4.png","Images/stage5.png","Images/stage6.png","Components/keyboard.js","Components/hanger.js","Components/chosenWord.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Key","props","stateKey","className","value","targetKey","onClick","clicky","disabled","Keyboard","state","a","b","c","d","f","g","h","i","j","k","l","m","n","p","q","r","s","t","u","v","w","x","y","z","bind","preventDefault","this","keyClick","setState","target","React","Component","HangImage","list","missCount","src","require","push","alt","Hanger","style","fontSize","position","ChosenWord","showData","join","theWord","randWord","split","letter","randomWords","Display","restart","App","guessed","turnCount","prepProps","prevState","arrWord","includes","length","Set","filter","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94af8340.chunk.js","sourcesContent":["var map = {\n\t\"./stage0.png\": 20,\n\t\"./stage1.png\": 21,\n\t\"./stage2.png\": 22,\n\t\"./stage3.png\": 23,\n\t\"./stage4.png\": 24,\n\t\"./stage5.png\": 25,\n\t\"./stage6.png\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/stage0.e2f8a938.png\";","module.exports = __webpack_public_path__ + \"static/media/stage1.42a9427b.png\";","module.exports = __webpack_public_path__ + \"static/media/stage2.721c7b81.png\";","module.exports = __webpack_public_path__ + \"static/media/stage3.69b5df79.png\";","module.exports = __webpack_public_path__ + \"static/media/stage4.dd382149.png\";","module.exports = __webpack_public_path__ + \"static/media/stage5.f301bf81.png\";","module.exports = __webpack_public_path__ + \"static/media/stage6.1784f670.png\";","import React from \"react\";\r\nimport \"../ComponentCss/keyboard.scss\";\r\n\r\n// all keys need a value to trigger for visibility\r\nclass Keyboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      a: 0,\r\n      b: 0,\r\n      c: 0,\r\n      d: 0,\r\n      e: 0,\r\n      f: 0,\r\n      g: 0,\r\n      h: 0,\r\n      i: 0,\r\n      j: 0,\r\n      k: 0,\r\n      l: 0,\r\n      m: 0,\r\n      n: 0,\r\n      o: 0,\r\n      p: 0,\r\n      q: 0,\r\n      r: 0,\r\n      s: 0,\r\n      t: 0,\r\n      u: 0,\r\n      v: 0,\r\n      w: 0,\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    };\r\n    this.clicky = this.clicky.bind(this);\r\n  }\r\n\r\n  // when triggered on button press, call\r\n  // props.keyClick(give it the target value)\r\n  // setState of the [same state value as the target value] to 1\r\n  clicky(e) {\r\n    e.preventDefault();\r\n    this.props.keyClick(e);\r\n    this.setState({ [e.target.value]: 1 });\r\n  }\r\n\r\n  // 26 keys for keyboard given the letter value, the state value,\r\n  // and the button function\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <Key targetKey=\"a\" stateKey={this.state.a} clicky={this.clicky} />\r\n        <Key targetKey=\"b\" stateKey={this.state.b} clicky={this.clicky} />\r\n        <Key targetKey=\"c\" stateKey={this.state.c} clicky={this.clicky} />\r\n        <Key targetKey=\"d\" stateKey={this.state.d} clicky={this.clicky} />\r\n        <Key targetKey=\"e\" stateKey={this.state.e} clicky={this.clicky} />\r\n        <Key targetKey=\"f\" stateKey={this.state.f} clicky={this.clicky} />\r\n        <Key targetKey=\"g\" stateKey={this.state.g} clicky={this.clicky} />\r\n        <Key targetKey=\"h\" stateKey={this.state.h} clicky={this.clicky} />\r\n        <Key targetKey=\"i\" stateKey={this.state.i} clicky={this.clicky} />\r\n        <Key targetKey=\"j\" stateKey={this.state.j} clicky={this.clicky} />\r\n        <Key targetKey=\"k\" stateKey={this.state.k} clicky={this.clicky} />\r\n        <Key targetKey=\"l\" stateKey={this.state.l} clicky={this.clicky} />\r\n        <Key targetKey=\"m\" stateKey={this.state.m} clicky={this.clicky} />\r\n        <Key targetKey=\"n\" stateKey={this.state.n} clicky={this.clicky} />\r\n        <Key targetKey=\"o\" stateKey={this.state.o} clicky={this.clicky} />\r\n        <Key targetKey=\"p\" stateKey={this.state.p} clicky={this.clicky} />\r\n        <Key targetKey=\"q\" stateKey={this.state.q} clicky={this.clicky} />\r\n        <Key targetKey=\"r\" stateKey={this.state.r} clicky={this.clicky} />\r\n        <Key targetKey=\"s\" stateKey={this.state.s} clicky={this.clicky} />\r\n        <Key targetKey=\"t\" stateKey={this.state.t} clicky={this.clicky} />\r\n        <Key targetKey=\"u\" stateKey={this.state.u} clicky={this.clicky} />\r\n        <Key targetKey=\"v\" stateKey={this.state.v} clicky={this.clicky} />\r\n        <Key targetKey=\"w\" stateKey={this.state.w} clicky={this.clicky} />\r\n        <Key targetKey=\"x\" stateKey={this.state.x} clicky={this.clicky} />\r\n        <Key targetKey=\"y\" stateKey={this.state.y} clicky={this.clicky} />\r\n        <Key targetKey=\"z\" stateKey={this.state.z} clicky={this.clicky} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// if key not pressed before show button with value===letter,\r\n// the clicky onClick function, and displays letter\r\n// else return a disabled button with same values\r\n// other than css visiblity hidden\r\nfunction Key(props) {\r\n  if (props.stateKey !== 1) {\r\n    return (\r\n      <button className=\"a\" value={props.targetKey} onClick={props.clicky}>\r\n        {\" \"}\r\n        {props.targetKey}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button\r\n        disabled\r\n        className=\"b\"\r\n        value={props.targetKey}\r\n        onClick={props.clicky}\r\n      >\r\n        {\" \"}\r\n        {props.targetKey}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import React from \"react\";\r\nimport \"../ComponentCss/hanger.css\";\r\n\r\n// loop upto player misses returning array of images showing\r\n// the current hang-man player miss stage\r\n// naming for image source was tricky. webpack wouldn't allow normal naming\r\n// had to set variable with require() rather than import\r\nfunction HangImage(props) {\r\n  let list = [];\r\n  for (let i = 0; i <= props.missCount; i++) {\r\n    let src = require(`../Images/stage${i}.png`);\r\n    list.push(<img src={src} alt={`stage${i}`} className=\"stage\" />);\r\n  }\r\n  return list;\r\n}\r\n\r\n// displays HangImage and number of player miss\r\nfunction Hanger(props) {\r\n  return (\r\n    <div className=\"hanger\">\r\n      <HangImage missCount={props.missCount} />\r\n      <div style={{ fontSize: \"100px\", position: \"absolute\" }}>\r\n        {props.missCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hanger;\r\n","import React from \"react\";\r\nimport \"../ComponentCss/chosenWord.css\";\r\n\r\n// the ChosenWord box needs to show the underscores always\r\n// if showData === \"\" becuase the player has not guessed yet\r\n// we need to map every letter of randWord and return '_'\r\n// rather than the letter to theWord variable\r\n// then we return theWord\r\n// else the player has guess and showData has a value\r\n// we map every letter of showData and return the letter to theWord variable\r\n// then we return theWord\r\nfunction ChosenWord(props) {\r\n  if (props.showData.join(\"\") === \"\") {\r\n    const theWord = props.randWord.split(\"\").map(letter => {\r\n      return <div>_</div>;\r\n    });\r\n    return <div className=\"chosenWord\">{theWord}</div>;\r\n  } else {\r\n    const theWord = props.showData.map(letter => {\r\n      return <div>{letter}</div>;\r\n    });\r\n    return <div className=\"chosenWord\">{theWord}</div>;\r\n  }\r\n}\r\n\r\nexport default ChosenWord;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Keyboard from \"./Components/keyboard\";\nimport Hanger from \"./Components/hanger\";\nimport ChosenWord from \"./Components/chosenWord\";\nlet randomWords = require(\"random-words\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randWord: \"\",\n      showData: [],\n      guessed: [],\n      turnCount: 0,\n      missCount: 0\n    };\n    this.keyClick = this.keyClick.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  // Sets randWord on initial load.\n  // Needs if statement otherwise new word loads every page refresh\n  componentDidMount() {\n    if (this.state.randWord === \"\") {\n      this.setState({ randWord: randomWords() });\n    }\n  }\n\n  // Setting these values on the keyClick() function does not work\n  // the app does not re-render on every state change, so these functions\n  // that use recently changed state values to change other state values\n  // run without the value of state, or with the previous state value.\n  // to fix componentDidUpdate runs whenever state gets updated.\n  // giving us the new state values\n  // if statement to stop infinite update loop\n  // setstate of showData. map every letter of randWord\n  // if guessed letters === the letter of randword it returns the letter to\n  // showData ,otherwise inplace of the letter a '_' is returned to showData\n  // missCount is counted here by subtracing number of correct guesses from\n  // turnCount\n  componentDidUpdate(prepProps, prevState) {\n    if (prevState.turnCount !== this.state.turnCount) {\n      const arrWord = this.state.randWord.split(\"\");\n      this.setState({\n        showData: arrWord.map(e => {\n          if (this.state.guessed.includes(e)) {\n            return e;\n          } else {\n            return \"_\";\n          }\n        }),\n        missCount: this.state.turnCount - this.state.guessed.length\n      });\n    }\n  }\n\n  // On restart click, reset state values\n  restart() {\n    this.setState({\n      randWord: randomWords(),\n      showData: [],\n      guessed: [],\n      turnCount: 0,\n      missCount: 0\n    });\n  }\n\n  // When keyClick is called increment turnCount,\n  // add to state.guessed array. take old state.guessed and add to\n  // new array that filters the letters in randWord for the\n  // letter === too the value passed from the target (e.target.value)\n  // ...new Set() is for an array with no repeat values\n  keyClick(e) {\n    e.preventDefault();\n    const arrWord = this.state.randWord.split(\"\");\n    this.setState({\n      turnCount: this.state.turnCount + 1,\n      guessed: [\n        ...this.state.guessed,\n        ...new Set(arrWord.filter(letter => letter === e.target.value))\n      ]\n    });\n  }\n\n  // renders out 1 function and passes all needed data\n  render() {\n    console.log(this.state.randWord);\n    return (\n      <div className=\"App\">\n        <div className=\"text\">Hang A Man</div>\n        <Display\n          missCount={this.state.missCount}\n          showData={this.state.showData}\n          randWord={this.state.randWord}\n          keyClick={this.keyClick}\n          restart={this.restart}\n        />\n      </div>\n    );\n  }\n}\n\n// if the player guesses all letters, Winner! show restart button\n// if the player still has guess left, show game elements\n// else the player didn't guess all the letters and has no guess\n// left. Game Over. show restart button\nfunction Display(props) {\n  if (props.showData.join(\"\") === props.randWord) {\n    return (\n      <div>\n        <h1>Winner!</h1>\n        <h2>{props.showData}</h2>\n        <button onClick={props.restart}>Restart</button>\n      </div>\n    );\n  }\n  if (props.missCount <= 6) {\n    return (\n      <div className=\"display\">\n        <Hanger missCount={props.missCount} />\n        <ChosenWord randWord={props.randWord} showData={props.showData} />\n        <Keyboard keyClick={props.keyClick} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Game Over!</h1>\n        <h2>{props.randWord}</h2>\n        <button onClick={props.restart}>Restart</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}